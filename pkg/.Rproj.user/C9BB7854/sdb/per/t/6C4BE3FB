{
    "contents" : "# # 1. разобраться с разархивированием: installr + 7zip\n# # 2. почитать про постинг пакетов в cran + r-forge\n# # 3. написать виньетку\n# # 4. написать мануал\n# \n# # Виньетки\n# # закачка данных и визуализация встренными возможностями\n# # pie-chart\n# # диаграммы\n# # chart.StackedBar()\n# # предсказание банкротства банков\n# \n# # data101 <- download.dbf(\"2010-07\")\n# # data102 <- download.dbf(\"2006-07\", \"2007-01\", form=102)\n# # data123 <- download.dbf(\"2014-07\", \"2015-01\", form=123)\n# # data134 <- download.dbf(\"2010-07\", \"2011-01\", form=134)\n# # data135 <- download.dbf(\"2010-07\", \"2011-01\", form=135)\n# \n# load(\"~/Documents/R packages/cbrAPI/big data.RData\")\n# #data101 <- download.dbf.all(form = 101)\n# # Возьмем собственный капитал банков, он лежит в 101 форме на 102 — 109 счетах\n# data101 <- subset(data101, NUM_SC %in% c(10200:10999))\n# \n# # До 2007 года итоги по счетам хранятся в столбце ITOGO, а после — в IITG. Надо это исправить, засунув один столбец.\n# data101 <- data101[ , which(names(data101) %in% c('REGN','NUM_SC','ITOGO','IITG','A_P','DT'))]\n# x <- subset(data101, DT < '2007-01-01')\n# y <- subset(data101, DT >= '2007-01-01')\n# data101$ITOGO <- c(x$ITOGO, y$IITG)\n# data101 <- data101[ , -which(names(data101) %in% c('IITG'))]\n# rm(x,y)\n# \n# # Умножим все активы на (-1), чтобы можно было найти суммы. В NA превратятся значения ITGAP — итого по активу / пассиву, это не страшно.\n# data101$NUM_SC <- as.integer(as.character(data101$NUM_SC))\n# data101$ITOGO <- as.integer(as.character(data101$ITOGO))\n# x <- subset(data101, subset=A_P==1)\n# y <- subset(data101, subset=A_P==2)\n# x$ITOGO <- x$ITOGO * (-1)\n# data101 <- rbind(x,y)\n# data101 <- data101[with(data101, order(DT, REGN, NUM_SC)), ]\n# rm(x,y)\n# \n# # Просуммируем счета 101 формы в каждом банке за каждую дату\n# data101.sub <- matrix(nrow=0,ncol=3)\n# colnames(data101.sub) <- c(\"REGN\", \"DT\", \"Equity\")\n# regnums1 <- levels(as.factor(data101$REGN))\n# dates1 <- levels(as.factor(data101$DT))\n# for (i in regnums1) {\n#   sub <- subset(data101, REGN == i)\n#   for (j in dates1) {\n#     equity <- subset(sub, DT == j)\n#     equity <- sum(equity$ITOGO)\n#     data101.sub <- rbind(data101.sub, c(i, j, equity))\n#   }\n#   message(i, ' / ', regnums1[length(regnums1)])\n# }\n# data101.sub <- as.data.frame(data101.sub)\n# rm(sub, equity, i, j)\n# \n# \n# load(\"~/Documents/R packages/cbrAPI/big data 102.RData\")\n# #data102 <- download.dbf.all(form = 102)\n# # Возьмем процентные доходы банков, они лежат в 102 форме на 11xxx счетах\n# data102 <- subset(data102, CODE %in% c(11100:11999))\n# \n# # До 2007 года итоги по счетам хранятся в столбце ITOGO, а после — в SIM_ITOGO. Надо это исправить, засунув один столбец.\n# x <- subset(data102, DT < '2007-01-01')\n# y <- subset(data102, DT >= '2007-01-01')\n# data102$ITOGO <- c(x$ITOGO, y$SIM_ITOGO)\n# data102 <- data102[ , -which(names(data102) %in% c('SIM_R','SIM_V','SIM_ITOGO'))]\n# rm(x,y)\n# \n# # Просуммируем счета 102 формы в каждом банке за каждую дату\n# data102.sub <- matrix(nrow=0,ncol=3)\n# colnames(data102.sub) <- c(\"REGN\", \"DT\", \"Income\")\n# regnums2 <- levels(as.factor(data102$REGN))\n# dates2 <- levels(as.factor(data102$DT))\n# for (i in regnums2) {\n#   sub <- subset(data102, REGN == i)\n#   for (j in dates2) {\n#     income <- subset(sub, DT == j)\n#     income <- sum(income$ITOGO)\n#     data102.sub <- rbind(data102.sub, c(i, j, income))\n#   }\n#   message(i, ' / ', regnums2[length(regnums2)])\n# }\n# data102.sub <- as.data.frame(data102.sub)\n# rm(sub, income, i, j)\n# \n# \n# # Возьмем общие рег. номера\n# regnums <- subset(regnums1, regnums1 %in% regnums2)\n# rm(regnums1, regnums2)\n# \n# # Теперь делаем суммы по каждым трем датам, чтобы собрать квартальные отчеты и присоединим колонку к data.sub\n# data.plot <- matrix(nrow=0,ncol=5)\n# colnames(data.plot) <- c(\"REGN\", \"DT\", \"Equity\", \"Income\", \"Coef\")\n# for (i in regnums) {\n#   sub <- subset(data101.sub, REGN == i)\n#   sub$DT <- as.character(sub$DT)\n#   for (j in 2:length(dates2)) {\n#     equity <- subset(sub, DT <= dates2[j])\n#     equity <- subset(equity, DT > dates2[j-1])\n#     equity$Equity <- as.numeric(as.character(equity$Equity))\n#     equity <- sum(equity$Equity)\n#     income <- subset(data102.sub, REGN == i & DT == dates2[j])\n#     income$Income <- as.numeric(as.character(income$Income))\n#     income <- sum(income$Income)\n#     data.plot <- rbind(data.plot, c(i, dates2[j], equity, income, income/equity))\n#   }\n#   message(i, ' / ', regnums[length(regnums)])\n# }\n# data.plot <- as.data.frame(data.plot)\n# rm(sub, equity, income, i, j)\n# \n# #уберем лишнее\n# df <- data.plot\n# df$Coef <- as.numeric(as.character(df$Coef))\n# df$Coef <- log(df$Coef)\n# df$Coef <- round(df$Coef, 4)\n# df <- df[apply(df, 1, function(row) all(row !=0 )),]\n# df$DT <- as.Date(df$DT, format='%Y-%m-%d')\n# \n# # Нарисуем box-plot\n# library(\"ggplot2\")\n# library(\"scales\")\n# labels <- rep('', length(dates2))\n# labels[seq(4,length(dates2),4)] <- 2005:2015\n# plot <- ggplot(data=df, aes(factor(DT), Coef))\n# plot + ggtitle('Box plot') +\n#   scale_x_discrete(name='Coefficient', labels=labels) +\n#   scale_y_discrete(name='Date') +\n#   geom_boxplot()\n# \n",
    "created" : 1427696212308.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2496282290",
    "id" : "6C4BE3FB",
    "lastKnownWriteTime" : 1431458185,
    "path" : "~/Documents/R packages/cbrAPI/R/test.R",
    "project_path" : "R/test.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}